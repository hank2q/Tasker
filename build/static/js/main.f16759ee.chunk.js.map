{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/Task.jsx","components/Tasks.jsx","components/AddTask.jsx","App.js","index.js"],"names":["Button","title","color","onClick","className","style","backgroundColor","defaultProps","console","log","Header","toggleAddForm","btnText","Task","task","handleDelete","toggleReminder","classes","reminder","onDoubleClick","id","text","cursor","day","Tasks","tasks","map","AddTask","handleAdd","useState","setText","date","setDate","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","name","placeholder","value","onChange","target","checked","currentTarget","App","showForm","setShowForm","setTasks","maxId","forEach","length","newtasks","filter","t","taskId","newTasks","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAEA,SAASA,EAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC5B,OACI,wBAAQA,QAASA,EAASC,UAAU,MAAMC,MAAO,CAAEC,gBAAiBJ,GAApE,SACKD,IAMbD,EAAOO,aAAe,CAClBN,MAAO,SACPC,MAAO,OACPC,QAAS,WACLK,QAAQC,IAAI,WAGLT,QCFAU,MAbf,YAA6C,IAA3BC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,QAC7B,OACI,yBAAQR,UAAU,SAAlB,UACI,wCACA,cAAC,EAAD,CACIH,MAAQW,EAAkB,QAAR,MAClBV,MAAQU,EAAoB,MAAV,QAClBT,QAASQ,Q,OCaVE,EArBF,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eAC5BC,EAAU,OAMd,OALIH,EAAKI,SACLD,GAAW,YAEXA,GAAW,eAGX,sBAAKb,UAAWa,EAASE,cAAe,kBAAMH,EAAeF,EAAKM,KAAlE,UACI,+BACKN,EAAKO,KACN,cAAC,IAAD,CACIhB,MAAO,CAAEH,MAAO,UAAWoB,OAAQ,WACnCnB,QAAS,kBAAMY,EAAaD,SAGpC,4BAAIA,EAAKS,UCDNC,EAfD,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOV,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eAClC,OACI,mCACKS,EAAMC,KAAI,SAACZ,GAAD,OACP,cAAC,EAAD,CAEIA,KAAMA,EACNC,aAAcA,EACdC,eAAgBA,GAHXF,EAAKM,UCkDfO,EAvDC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACPC,mBAAS,IADF,mBACxBR,EADwB,KAClBS,EADkB,OAEPD,mBAAS,IAFF,mBAExBE,EAFwB,KAElBC,EAFkB,OAGCH,oBAAS,GAHV,mBAGxBX,EAHwB,KAGde,EAHc,KAe/B,OACI,uBAAM7B,UAAU,WAAW8B,SAZf,SAACC,GACbA,EAAEC,iBACGf,GAILO,EAAU,CAAEP,KAAMA,EAAME,IAAKQ,EAAMb,SAAUA,IAC7CY,EAAQ,IACRE,EAAQ,IACRC,GAAY,IANRI,MAAM,qBASV,UACI,sBAAKjC,UAAU,eAAf,UACI,uBAAOkC,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLC,KAAK,OACLpB,GAAG,OACHqB,YAAY,aACZC,MAAOrB,EACPsB,SAAU,SAACR,GAAD,OAAOL,EAAQK,EAAES,OAAOF,aAG1C,sBAAKtC,UAAU,eAAf,UACI,uBAAOkC,QAAQ,OAAf,2BACA,uBACIC,KAAK,OACLnB,GAAG,OACHoB,KAAK,OACLC,YAAY,gBACZC,MAAOX,EACPY,SAAU,SAACR,GAAD,OAAOH,EAAQG,EAAES,OAAOF,aAG1C,sBAAKtC,UAAU,kCAAf,UACI,uBAAOkC,QAAQ,WAAf,0BACA,uBACIC,KAAK,WACLC,KAAK,WACLpB,GAAG,WACHyB,QAAS3B,EACTwB,MAAOxB,EACPyB,SAAU,SAACR,GAAD,OAAOF,EAAYE,EAAEW,cAAcD,eAGrD,uBAAON,KAAK,SAASG,MAAM,OAAOtC,UAAU,sBCIzC2C,MAnDf,WAAgB,IAAD,EACqBlB,oBAAS,GAD9B,mBACJmB,EADI,KACMC,EADN,OAEepB,mBAAS,IAFxB,mBAEJJ,EAFI,KAEGyB,EAFH,KAkCX,OACI,sBAAK9C,UAAU,YAAf,UACI,cAAC,EAAD,CAAQQ,QAASoC,EAAUrC,cANhB,WACfsC,GAAaD,MAMRA,GAAY,cAAC,EAAD,CAASpB,UAlBd,SAACd,GACb,IAAIqC,EAAQ,EACZ1B,EAAM2B,SAAQ,SAACtC,GACPA,EAAKM,IAAM+B,GACXA,OAGRrC,EAAKM,GAAK+B,EAAQ,EAClBD,EAAS,GAAD,mBAAKzB,GAAL,CAAYX,QAWfW,EAAM4B,OAAS,EACZ,cAAC,EAAD,CACI5B,MAAOA,EACPV,aArCG,SAACD,GAChB,IAAIwC,EAAW7B,EAAM8B,QAAO,SAACC,GAAD,OAAOA,EAAEpC,KAAON,EAAKM,MACjD8B,EAASI,IAoCGtC,eAjCO,SAACyC,GACpB,IAAIC,EAAWjC,EAAMC,KAAI,SAAC8B,GAItB,OAHIA,EAAEpC,KAAOqC,IACTD,EAAEtC,UAAYsC,EAAEtC,UAEbsC,KAEXN,EAASQ,MA6BD,uD,MC9ChBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.f16759ee.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Button({ title, color, onClick }) {\r\n    return (\r\n        <button onClick={onClick} className=\"btn\" style={{ backgroundColor: color }}>\r\n            {title}\r\n        </button>\r\n    );\r\n}\r\n\r\n// fall back on if no props where given from parent\r\nButton.defaultProps = {\r\n    title: \"Button\",\r\n    color: \"Blue\",\r\n    onClick: () => {\r\n        console.log(\"Click\");\r\n    },\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nfunction Header({ toggleAddForm, btnText }) {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>Tasker</h1>\r\n            <Button\r\n                title={!btnText ? \"Add\" : \"Close\"}\r\n                color={!btnText ? \"green\" : \"red\"}\r\n                onClick={toggleAddForm}\r\n            />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, handleDelete, toggleReminder }) => {\r\n    let classes = \"task\";\r\n    if (task.reminder) {\r\n        classes += \" reminder\";\r\n    } else {\r\n        classes += \" no-reminder\";\r\n    }\r\n    return (\r\n        <div className={classes} onDoubleClick={() => toggleReminder(task.id)}>\r\n            <h3>\r\n                {task.text}\r\n                <FaTimes\r\n                    style={{ color: \"#ff1200\", cursor: \"pointer\" }}\r\n                    onClick={() => handleDelete(task)}\r\n                />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, handleDelete, toggleReminder }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task\r\n                    key={task.id}\r\n                    task={task}\r\n                    handleDelete={handleDelete}\r\n                    toggleReminder={toggleReminder}\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ handleAdd }) => {\r\n    const [text, setText] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [reminder, setReminder] = useState(false);\r\n    const addTask = (e) => {\r\n        e.preventDefault();\r\n        if (!text) {\r\n            alert(\"Add text to task\");\r\n            return;\r\n        }\r\n        handleAdd({ text: text, day: date, reminder: reminder });\r\n        setText(\"\");\r\n        setDate(\"\");\r\n        setReminder(false);\r\n    };\r\n    return (\r\n        <form className=\"add-form\" onSubmit={addTask}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"text\">Task</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    id=\"text\"\r\n                    placeholder=\"Task to do\"\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"date\">Date and Time</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"date\"\r\n                    name=\"date\"\r\n                    placeholder=\"date and time\"\r\n                    value={date}\r\n                    onChange={(e) => setDate(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label htmlFor=\"reminder\">Set Reminder</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    name=\"reminder\"\r\n                    id=\"reminder\"\r\n                    checked={reminder}\r\n                    value={reminder}\r\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n            <input type=\"submit\" value=\"save\" className=\"btn btn-block\" />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddTask;\r\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { useState } from \"react\";\n\nfunction App() {\n    const [showForm, setShowForm] = useState(false);\n    const [tasks, setTasks] = useState([]);\n\n    const deleteTask = (task) => {\n        let newtasks = tasks.filter((t) => t.id !== task.id);\n        setTasks(newtasks);\n    };\n\n    const toggleReminder = (taskId) => {\n        let newTasks = tasks.map((t) => {\n            if (t.id === taskId) {\n                t.reminder = !t.reminder;\n            }\n            return t;\n        });\n        setTasks(newTasks);\n    };\n\n    const addTask = (task) => {\n        let maxId = 0;\n        tasks.forEach((task) => {\n            if (task.id >= maxId) {\n                maxId++;\n            }\n        });\n        task.id = maxId + 1;\n        setTasks([...tasks, task]);\n    };\n\n    const toggleForm = () => {\n        setShowForm(!showForm);\n    };\n\n    return (\n        <div className=\"container\">\n            <Header btnText={showForm} toggleAddForm={toggleForm} />\n            {showForm && <AddTask handleAdd={addTask} />}\n            {tasks.length > 0 ? (\n                <Tasks\n                    tasks={tasks}\n                    handleDelete={deleteTask}\n                    toggleReminder={toggleReminder}\n                />\n            ) : (\n                <p>No tasks available</p>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}